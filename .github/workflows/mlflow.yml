name: SalesForecasting

on:
  push:
    branches:
      - main
    paths:
      - 'MLProject/**'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  MLFLOW_EXPERIMENT_NAME: SalesForecasting
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/sales_forecasting_image

jobs:
  train-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: sales_forecasting_env
          environment-file: MLProject/conda.yaml
          auto-activate-base: false

      - name: Install MLflow with Extras
        run: pip install "mlflow[extras]==2.22.0"

      - name: Run MLflow Project
        run: |
          cd MLProject
          mlflow run . --env-manager=local

      - name: Get Latest MLflow run_id
        run: |
          python <<EOF
          import mlflow
          client = mlflow.tracking.MlflowClient()
          experiment = client.get_experiment_by_name("${{ env.MLFLOW_EXPERIMENT_NAME }}")
          if experiment is None:
              raise Exception("Experiment not found.")
          runs = client.search_runs(experiment.experiment_id, order_by=["start_time DESC"])
          if not runs:
              raise Exception("No runs found.")
          run_id = runs[0].info.run_id
          print(f"Run ID: {run_id}")
          with open("${GITHUB_ENV}", "a") as f:
              f.write(f"RUN_ID={run_id}\n")
          EOF

      - name: Download Model Artifact
        run: |
          mlflow artifacts download --run-id $RUN_ID --artifact-path model --dst-path MLProject/output

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: MLProject/output/model.pkl

  build-and-push-docker:
    needs: train-model
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install MLflow with Docker Support
        run: |
          pip install "mlflow[extras]==2.22.0"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image via MLflow
        run: |
          mlflow models build-docker \
            --model-uri "runs:/$RUN_ID/model" \
            --name ${{ env.DOCKER_IMAGE_NAME }}

      - name: Push Docker Image
        run: |
          docker push ${{ env.DOCKER_IMAGE_NAME }}

name: CI/CD MLflow Sales Forecasting

on:
  push:
    branches: [ main ]
    paths:   [ 'MLProject/' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DATA_PATH: MLProject/Supplement-Sales-Weekly-Expanded_preprocessing.csv
  MLFLOW_EXPERIMENT_NAME: mlflow-salesforecasting
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/sales_forecasting_image

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1 ── checkout
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2 ── python
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # 3 ── dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow
          pip install -r MLProject/requirements.txt

      # 4 ── jalankan MLflow Project
      - name: Run MLflow Project
        run: |
          mlflow run MLProject \
            --env-manager local \
            --entry-point main \
            -P data_path=$(pwd)/${{ env.DATA_PATH }}

      # 5 ── ambil run ID terakhir
      - name: Get latest MLflow run_id
        run: |
          python <<'PY'
          import mlflow, os
          client = mlflow.tracking.MlflowClient()
          exp = client.get_experiment_by_name(os.environ["MLFLOW_EXPERIMENT_NAME"])
          if exp is None:
              raise SystemExit("Experiment not found.")
          runs = client.search_runs([exp.experiment_id],
                                    order_by=["start_time DESC"],
                                    max_results=1)
          if not runs:
              raise SystemExit("No runs found.")
          run_id = runs[0].info.run_id
          print("Latest run_id:", run_id)
          with open(os.environ["GITHUB_ENV"], "a") as f:
              f.write(f"RUN_ID={run_id}\n")
          PY

      # 6 ── download artefak model
      - name: Download Model Artifact from MLflow
        run: |
          mlflow artifacts download \
            --run-id $RUN_ID \
            --artifact-path model \
            --dst-path MLProject/output

      # 7 ── upload artefak ke GitHub Actions
      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: MLProject/output/model   # ← seluruh folder

      # 8 ── login Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 9 ── build Docker image via MLflow
      - name: Build Docker Image via MLflow
        run: |
          mlflow models build-docker \
            --model-uri "runs:/$RUN_ID/model" \
            --name ${{ env.DOCKER_IMAGE_NAME }}

      # 10 ── push Docker image
      - name: Push Docker Image
        run: |
          docker push ${{ env.DOCKER_IMAGE_NAME }}

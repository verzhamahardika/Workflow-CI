name: SalesForecasting

on:
  push:
    branches:
      - main

jobs:
  train-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: sales_forecasting_env
          environment-file: MLProject/conda.yaml
          auto-activate-base: false

      - name: Install MLflow with Extras
        run: pip install "mlflow[extras]==2.22.0"

      - name: Set Experiment for MLflow
        run: |
          python -c "import mlflow; mlflow.set_experiment('SalesForecasting')"

      - name: Run MLflow Project
        run: |
          cd MLProject
          mlflow run . --env-manager=local

      - name: Copy Artifacts to Folder
        run: |
          mkdir -p artifacts
          cp -r MLProject/mlruns ./artifacts/mlruns

      - name: Commit and Push Artifacts
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add artifacts
          git commit -m "Save MLflow artifacts"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push-docker:
    needs: train-model
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Start Docker Daemon
        run: |
          sudo systemctl start docker
          docker --version

      - name: Install MLflow with Docker Support
        run: |
          pip install wheel setuptools
          pip install "mlflow[extras]==2.22.0"

      - name: Build Docker Image with MLflow
        run: |
          cd MLProject
          mlflow build-docker -n sales_forecasting_image -f .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Tag and Push Docker Image
        run: |
          docker tag sales_forecasting_image ${{ secrets.DOCKERHUB_USERNAME }}/sales_forecasting_image:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sales_forecasting_image:latest
